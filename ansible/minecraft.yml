# yaml-language-server: $schema=https://json.schemastore.org/ansible-playbook.json

 - hosts: all

   tasks:

    - name: Setting the timezone
      timezone:
         name: "{{ timezone }}"

    - name: Removing the Oracle Cloud iptables rules
      lineinfile:
         path: /etc/iptables/rules.v4
         search_string: "-A INPUT -j REJECT --reject-with icmp-host-prohibited"
         line: "#-A INPUT -j REJECT --reject-with icmp-host-prohibited"
      register: iptables

    - name: Reloading iptables
      shell: iptables-restore < /etc/iptables/rules.v4
      when: iptables.changed

    - name: Preventing cloud-init from overwriting /etc/apt/sources.list
      lineinfile:
         path: /etc/cloud/cloud.cfg
         line: "apt_preserve_sources_list: true"
      when:
       - edition == "bedrock"
       - ansible_architecture != "x86_64"

    - name: Enabling AMD64 apt repositories
      copy:
         src: files/arch
         dest: /var/lib/dpkg/arch
         owner: root
         group: root
         mode: 0644
      when:
       - edition == "bedrock"
       - ansible_architecture != "x86_64"

    - name: Getting the instance availability domain
      uri:
         url: http://169.254.169.254/opc/v2/instance/ociAdName
         headers:
            Authorization: Bearer Oracle
         return_content: yes
      when:
       - edition == "bedrock"
       - ansible_architecture != "x86_64"
      register: availability_domain

    - name: Adding AMD64 apt repositories
      template:
         src: templates/sources.list.j2
         dest: /etc/apt/sources.list
         owner: root
         group: root
         mode: 0644
      when:
       - edition == "bedrock"
       - ansible_architecture != "x86_64"

    - name: Installing Bedrock packages
      apt:
         name:
          - unzip
          - libc6:amd64
          - zlib1g:amd64
          - libssl1.1:amd64
          - libstdc++6:amd64
          - python3-pip
          - jq
         state: present
         update_cache: yes
      when: edition == "bedrock"

    - name: Installing AMD64 application support
      apt:
         name: qemu-user
         state: present
      when:
       - edition == "bedrock"
       - ansible_architecture != "x86_64"

    - name: Adding the OpenJDK PPA
      apt_repository:
         repo: ppa:openjdk-r/ppa
      when: type == "java"

    - name: Installing Java packages
      apt:
         name:
          - openjdk-16-jre-headless
          - python3-pip
          - jq
         state: present
         update_cache: yes
      when: type == "java"

    - name: Creating the minecraft user
      user:
         name: minecraft
         shell: /bin/bash

    - name: Gathering Facts about services
      service_facts:
      when:
       - new_server == "true" or update_server == "true"

    - name: Stopping the existing server
      systemd:
         name: minecraft-{{ edition }}
         state: stopped
      when:
       - new_server == "true" or update_server == "true"
       - ansible_facts.services['minecraft-' + edition + '.service'] is defined

    - name: Removing the existing server
      file:
         path: /home/minecraft/{{ edition }}
         state: absent
      when: new_server == "true"

    - name: Creating the server directory
      file:
         path: /home/minecraft/{{ edition }}
         state: directory
         owner: minecraft
         group: minecraft
         mode: 0755
      when: new_server == "true"

    - name: Backing up the existing server
      shell: tar cfO - {{ edition }} | gzip --best | oci os object put --auth instance_principal --bucket-name {{ bucket_name }} --file - --name "{{ edition }}.tar.gz" --force
      args:
         chdir: /home/minecraft
      when: update_server == "true"

    - name: Removing existing Bedrock data
      file:
         path: /home/minecraft/bedrock/{{ item }}
         state: absent
      with_items:
       - behavior_packs
       - definitions
       - development_behavior_packs
       - development_resource_packs
       - development_skin_packs
       - minecraftpe
       - premium_cache
       - resource_packs
       - structures
       - treatments
       - world_templates
      when:
       - edition == "bedrock"
       - update_server == "true"

    - name: Downloading Minecraft Bedrock server
      unarchive:
         src: https://minecraft.azureedge.net/bin-linux/bedrock-server-1.17.0.03.zip
         dest: /home/minecraft/bedrock/
         owner: minecraft
         group: minecraft
         mode: u=rwX,g=rX,o=rX
         remote_src: yes
         exclude:
          - permissions.json
          - whitelist.json
      when:
       - edition == "bedrock"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading Minecraft Java server
      get_url:
         url: https://launcher.mojang.com/v1/objects/0a269b5f2c5b93b1712d0f5dc43b6182b9ab254e/server.jar
         dest: /home/minecraft/java/server.jar
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "java"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading Paper server
      get_url:
         url: https://papermc.io/api/v2/projects/paper/versions/1.16.5/builds/778/downloads/paper-1.16.5-778.jar
         dest: /home/minecraft/{{ edition }}/server.jar
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "paper" or edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Copying the server.properties file
      copy:
         src: files/{{ type }}/server.properties
         dest: /home/minecraft/{{ edition }}/
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Copying the server permissions files
      copy:
         src: files/{{ type }}/{{ item }}.json
         dest: /home/minecraft/{{ edition }}/
         owner: minecraft
         group: minecraft
         mode: 0644
      with_items:
       - "{{ opsfile }}"
       - whitelist
      when:
       - restore_permissions == "true"

    - name: Configuring the Paper server
      copy:
         src: files/java/paper/{{ item }}.yml
         dest: /home/minecraft/{{ edition }}/
         owner: minecraft
         group: minecraft
         mode: 0644
      with_items:
       - bukkit
       - paper
       - spigot
      when:
       - edition == "paper" or edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Creating the Paper plugin directories
      file:
         path: /home/minecraft/geyser/plugins/{{ item }}
         state: directory
         owner: minecraft
         group: minecraft
         mode: 0755
      with_items:
       - CustomCommandPrefix
       - floodgate-bukkit
       - Geyser-Spigot/packs
      when:
       - edition == "geyser"
       - new_server == "true"
       - restore_backup == "false"

    - name: Downloading the Geyser plugin
      get_url:
         url: https://ci.opencollab.dev/job/GeyserMC/job/Geyser/job/master/lastSuccessfulBuild/artifact/bootstrap/spigot/target/Geyser-Spigot.jar
         dest: /home/minecraft/geyser/plugins/
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Configuring the Geyser plugin
      copy:
         src: files/java/paper/geyser/config.yml
         dest: /home/minecraft/geyser/plugins/Geyser-Spigot/config.yml
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading the Floodgate plugin
      get_url:
         url: https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/lastSuccessfulBuild/artifact/spigot/target/floodgate-spigot.jar
         dest: /home/minecraft/geyser/plugins/
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Configuring the Floodgate plugin
      copy:
         src: files/java/paper/geyser/floodgate/config.yml
         dest: /home/minecraft/geyser/plugins/floodgate-bukkit/config.yml
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading the CustomCommandPrefix plugin
      copy:
         src: files/CustomCommandPrefix-1.0.jar
         dest: /home/minecraft/geyser/plugins/CustomCommandPrefix.jar
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Configuring the CustomCommandPrefix plugin
      copy:
         content: "prefix: '?'"
         dest: /home/minecraft/geyser/plugins/CustomCommandPrefix/config.yml
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading the GeyserOptionalPack resource pack
      get_url:
         url: https://ci.opencollab.dev/job/GeyserMC/job/GeyserOptionalPack/job/master/lastSuccessfulBuild/artifact/GeyserOptionalPack.mcpack
         dest: /home/minecraft/geyser/plugins/Geyser-Spigot/packs/
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Installing the OCI client
      pip:
         name: oci-cli

    - name: Downloading the latest server backup
      command: oci os object get --auth instance_principal --bucket-name {{ bucket_name }} --file {{ edition }}.tar.gz --name {{ edition }}.tar.gz
      args:
         chdir: /home/minecraft
      when:
       - restore_backup == "true"
       - backup_version == ""

    - name: Downloading the server backup
      command: oci os object get --auth instance_principal --bucket-name {{ bucket_name }} --file {{ edition }}.tar.gz --name {{ edition }}.tar.gz --version-id {{ backup_version }}
      args:
         chdir: /home/minecraft
      when:
       - restore_backup == "true"
       - backup_version | length > 0

    - name: Restoring the server backup
      unarchive:
         src: /home/minecraft/{{ edition }}.tar.gz
         dest: /home/minecraft/
         owner: minecraft
         group: minecraft
         mode: u=rwX,g=rX,o=rX
         remote_src: yes
      when: restore_backup == "true"

    - name: Removing the downloaded backup
      file:
         path: /home/minecraft/{{ edition }}.tar.gz
         state: absent
      when: restore_backup == "true"

    - name: Making the Bedrock server executable
      file:
         path: /home/minecraft/bedrock/bedrock_server
         mode: 0755
      when: edition == "bedrock"

    - name: Copying the Minecraft server scripts
      template:
         src: templates/{{ item }}.sh.j2
         dest: /home/minecraft/{{ item }}_{{ edition }}.sh
         owner: minecraft
         group: minecraft
         mode: 0755
      with_items:
       - stop
       - backup

    - name: Copying the OS scripts
      copy:
         src: files/{{ item }}.sh
         dest: /home/minecraft/
         owner: minecraft
         group: minecraft
         mode: 0755
      with_items:
       - apt-reboot
       - disk-utilization

    - name: Copying the systemd units
      template:
         src: "{{ item.type }}/systemd/{{ item.src }}"
         dest: /etc/systemd/system/{{ item.dest }}
         owner: root
         group: root
         mode: 0644
      with_items:
       - { src: "minecraft.service.j2", dest: "minecraft-{{ edition }}.service", type: "templates" }
       - { src: "minecraft-backup.service.j2", dest: "minecraft-{{ edition }}-backup.service", type: "templates" }
       - { src: "minecraft-backup.timer.j2", dest: "minecraft-{{ edition }}-backup.timer", type: "templates" }
       - { src: "apt-upgrade.service", dest: "apt-upgrade.service", type: "files" }
       - { src: "apt-upgrade.timer", dest: "apt-upgrade.timer", type: "files" }
       - { src: "oci-disk-utilization.service", dest: "oci-disk-utilization.service", type: "files" }
       - { src: "oci-disk-utilization.timer", dest: "oci-disk-utilization.timer", type: "files" }

    - name: Accepting the Minecraft Server EULA
      copy:
         content: eula=true
         dest: /home/minecraft/{{ edition }}/eula.txt
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - type == "java"
       - new_server == "true"
       - restore_backup == "false"
       - eula == "true"

    - name: Starting the systemd units
      systemd:
         name: "{{ item }}"
         state: started
         enabled: yes
         daemon_reload: yes
      with_items:
       - minecraft-{{ edition }}.service
       - minecraft-{{ edition }}-backup.timer
       - apt-upgrade.timer
       - oci-disk-utilization.timer
