# yaml-language-server: $schema=https://json.schemastore.org/ansible-playbook.json

 - hosts: java

   tasks:

    - name: Configuring sshd # Based on https://infosec.mozilla.org/guidelines/openssh and CIS Benchmarks
      lineinfile:
         path: /etc/ssh/sshd_config
         regexp: "^({{ item.regexp }}|#{{ item.regexp }})"
         line: "{{ item.line }}"
      with_items:
       - { regexp: "KexAlgorithms", line: "KexAlgorithms curve25519-sha256@libssh.org" }
       - { regexp: "Ciphers", line: "Ciphers chacha20-poly1305@openssh.com" }
       - { regexp: "MACs", line: "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com" }
       - { regexp: "AuthenticationMethods", line: "AuthenticationMethods publickey" }
       - { regexp: "LogLevel", line: "LogLevel VERBOSE" }
       - { regexp: "Subsystem sftp", line: "Subsystem sftp /usr/libexec/openssh/sftp-server -f AUTHPRIV -l INFO" }
       - { regexp: "PermitRootLogin", line: "PermitRootLogin no" }
       - { regexp: "UsePrivilegeSeparation", line: "UsePrivilegeSeparation sandbox" }
       - { regexp: "LoginGraceTime", line: "LoginGraceTime 1m" }
       - { regexp: "AllowTcpForwarding", line: "AllowTcpForwarding no" }
       - { regexp: "MaxSessions", line: "MaxSessions 4" }
       - { regexp: "X11Forwarding", line: "X11Forwarding no" }
       - { regexp: "MaxAuthTries", line: "MaxAuthTries 4" }
      register: sshd

    - name: Checking if SSH short moduli needs disabling
      command: awk '{ if ($5 < 3071) { exit 3 } else { exit 0 } }' /etc/ssh/moduli
      changed_when: moduli.rc == 3
      failed_when:
       - moduli.rc != 0
       - moduli.rc != 3
      register: moduli

    - name: Disabling SSH short moduli
      command: awk -i inplace '$5 >= 3071' /etc/ssh/moduli
      when: moduli.changed

    - name: Restarting sshd
      systemd:
         name: sshd
         state: restarted
      when: sshd.changed or moduli.changed

    - name: Enabling EPEL
      yum_repository:
         name: ol8_developer_EPEL
         description: Oracle Linux $releasever EPEL Packages for Development ($basearch)
         baseurl: https://yum$ociregion.$ocidomain/repo/OracleLinux/OL8/developer/EPEL/$basearch/
         gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
         gpgcheck: 1
         file: oracle-epel-ol8
         enabled: true

    - name: Installing updates
      dnf:
         name: '*'
         state: latest
         update_cache: yes

    - name: Applying updates with Uptrack
      command: uptrack-upgrade -y

    - name: Setting the timezone
      timezone:
         name: "{{ timezone }}"

    - name: Installing packages
      dnf:
         name:
          - java-latest-openjdk-headless
          - jq
          - tmux
         state: present
         update_cache: yes

    - name: Creating the minecraft user
      user:
         name: minecraft
         shell: /bin/bash

    - name: Gathering Facts about services
      service_facts:
      when:
       - new_server == "true" or update_server == "true"

    - name: Stopping the existing server
      systemd:
         name: minecraft-{{ edition }}
         state: stopped
      when:
       - new_server == "true" or update_server == "true"
       - ansible_facts.services['minecraft-' + edition + '.service'] is defined

    - name: Removing the existing server
      file:
         path: /home/minecraft/{{ edition }}
         state: absent
      when: new_server == "true"

    - name: Creating the server directory
      file:
         path: /home/minecraft/{{ edition }}
         state: directory
         owner: minecraft
         group: minecraft
         mode: 0755
      when: new_server == "true"

    - name: Backing up the existing server
      shell: tar cfO - {{ edition }} | xz -zkce -T 1 | oci os object put --auth instance_principal --bucket-name {{ bucket_name }} --file - --name "{{ edition }}.tar.xz" --force
      args:
         chdir: /home/minecraft
      when: update_server == "true"

    - name: Getting the latest Paper build
      shell: curl --silent https://papermc.io/api/v2/projects/paper/versions/{{ version }} | jq ".builds | max"
      register: paper_latest
      when:
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading Minecraft Paper server
      get_url:
         url: https://papermc.io/api/v2/projects/paper/versions/{{ version }}/builds/{{ paper_latest.stdout }}/downloads/paper-{{ version }}-{{ paper_latest.stdout }}.jar
         dest: /home/minecraft/{{ edition }}/server.jar
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Configuring the Minecraft server
      copy:
         src: files/java/{{ item }}
         dest: /home/minecraft/{{ edition }}/
         owner: minecraft
         group: minecraft
         mode: 0644
      with_items:
       - server.properties
       - spigot.yml
       - paper.yml
      when:
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Copying the server permissions files
      copy:
         src: files/java/{{ item }}.json
         dest: /home/minecraft/{{ edition }}/
         owner: minecraft
         group: minecraft
         mode: 0644
      with_items:
       - ops
       - whitelist
      when:
       - restore_permissions == "true"
       - update_server == "false"
       - restore_backup == "false"

    - name: Creating the Geyser plugin directories
      file:
         path: /home/minecraft/geyser/plugins/{{ item }}
         state: directory
         owner: minecraft
         group: minecraft
         mode: 0755
      with_items:
       - CustomCommandPrefix
       - floodgate
       - Geyser-Spigot/packs
      when:
       - edition == "geyser"
       - new_server == "true"
       - restore_backup == "false"

    - name: Downloading the Geyser plugin
      get_url:
         url: https://ci.opencollab.dev/job/GeyserMC/job/Geyser/job/master/lastSuccessfulBuild/artifact/bootstrap/spigot/target/Geyser-Spigot.jar
         dest: /home/minecraft/geyser/plugins/
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Configuring the Geyser plugin
      copy:
         src: files/java/geyser/config.yml
         dest: /home/minecraft/geyser/plugins/Geyser-Spigot/config.yml
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading the Floodgate plugin
      get_url:
         url: https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/lastSuccessfulBuild/artifact/spigot/target/floodgate-spigot.jar
         dest: /home/minecraft/geyser/plugins/
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading the CustomCommandPrefix plugin
      copy:
         src: files/CustomCommandPrefix-1.0.jar
         dest: /home/minecraft/geyser/plugins/CustomCommandPrefix.jar
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Configuring the CustomCommandPrefix plugin
      copy:
         content: "prefix: '?'"
         dest: /home/minecraft/geyser/plugins/CustomCommandPrefix/config.yml
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading the GeyserOptionalPack resource pack
      get_url:
         url: https://ci.opencollab.dev/job/GeyserMC/job/GeyserOptionalPack/job/master/lastSuccessfulBuild/artifact/GeyserOptionalPack.mcpack
         dest: /home/minecraft/geyser/plugins/Geyser-Spigot/packs/
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - edition == "geyser"
       - new_server == "true" or update_server == "true"
       - restore_backup == "false"

    - name: Downloading the latest server backup
      command: oci os object get --auth instance_principal --bucket-name {{ bucket_name }} --file {{ edition }}.tar.gz --name {{ edition }}.tar.gz
      args:
         chdir: /home/minecraft
      when:
       - restore_backup == "true"
       - backup_version == ""

    - name: Downloading the server backup
      command: oci os object get --auth instance_principal --bucket-name {{ bucket_name }} --file {{ edition }}.tar.gz --name {{ edition }}.tar.gz --version-id {{ backup_version }}
      args:
         chdir: /home/minecraft
      when:
       - restore_backup == "true"
       - backup_version | length > 0

    - name: Restoring the server backup
      unarchive:
         src: /home/minecraft/{{ edition }}.tar.gz
         dest: /home/minecraft/
         owner: minecraft
         group: minecraft
         mode: u=rwX,g=rX,o=rX
         remote_src: yes
      when: restore_backup == "true"

    - name: Removing the downloaded backup
      file:
         path: /home/minecraft/{{ edition }}.tar.gz
         state: absent
      when: restore_backup == "true"

    - name: Copying scripts and systemd units
      template:
         src: "{{ item.src }}"
         dest: "{{ item.dest }}"
         owner: "{{ item.owner }}"
         group: "{{ item.owner }}"
         mode: "{{ item.mode }}"
      with_items:
       - { src: "templates/dnf-reboot.sh.j2", dest: "/home/minecraft/dnf-reboot.sh", owner: "minecraft", mode: "0755" }
       - { src: "templates/stop.sh.j2", dest: "/home/minecraft/stop_{{ edition }}.sh", owner: "minecraft", mode: "0755" }
       - { src: "templates/backup.sh.j2", dest: "/home/minecraft/backup_{{ edition }}.sh", owner: "minecraft", mode: "0755" }
       - { src: "files/disk-utilization.sh", dest: "/home/minecraft/", owner: "minecraft", mode: "0755" }
       - { src: "templates/systemd/minecraft.service.j2", dest: "/etc/systemd/system/minecraft-{{ edition }}.service", owner: "root", mode: "0644" }
       - { src: "templates/systemd/minecraft-backup.service.j2", dest: "/etc/systemd/system/minecraft-{{ edition }}-backup.service", owner: "root", mode: "0644" }
       - { src: "templates/systemd/minecraft-backup.timer.j2", dest: "/etc/systemd/system/minecraft-{{ edition }}-backup.timer", owner: "root", mode: "0644" }
       - { src: "files/systemd/dnf-upgrade.service", dest: "/etc/systemd/system/dnf-upgrade.service", owner: "root", mode: "0644" }
       - { src: "files/systemd/dnf-upgrade.timer", dest: "/etc/systemd/system/dnf-upgrade.timer", owner: "root", mode: "0644" }
       - { src: "files/systemd/oci-disk-utilization.service", dest: "/etc/systemd/system/oci-disk-utilization.service", owner: "root", mode: "0644" }
       - { src: "files/systemd/oci-disk-utilization.timer", dest: "/etc/systemd/system/oci-disk-utilization.timer", owner: "root", mode: "0644" }

    - name: Accepting the Minecraft Server EULA
      copy:
         content: eula=true
         dest: /home/minecraft/{{ edition }}/eula.txt
         owner: minecraft
         group: minecraft
         mode: 0644
      when:
       - new_server == "true"
       - restore_backup == "false"
       - eula == "true"

    - name: Setting SELinux to permissive (will fix)
      selinux:
         policy: targeted
         state: permissive

    - name: Copying firewall rule
      template:
         src: files/minecraft.xml
         dest: /etc/firewalld/services/
         owner: root
         group: root
         mode: 0644
      register: firewall

    - name: Reloading firewalld
      command: firewall-cmd --reload
      when: firewall.changed

    - name: Allowing Minecraft through the firewall
      firewalld:
         service: minecraft
         state: enabled
         permanent: yes
         immediate: yes

    - name: Checksumming the Oracle Cloud Agent configuration file before modifying it
      command: openssl dgst -sha3-224 /etc/oracle-cloud-agent/agent.yml
      register: oca_old

    - name: Configuring the Oracle Cloud Agent to enable the OS Management Service plugin # Taken from https://docs.oracle.com/en-us/iaas/os-management/osms/osms-getstarted.htm#osms-manage-plugin-ol8
      command: |
         sed -i -e '/^  osms:/,/^  [a-z]*:/{
         s/\(.*disabled:.*\)true/\1false/
         /^.*disableByOs:$/,/^  [a-z]*:/{
         /^.*-.*Oracle Linux Server.*:$/d
         /^.*-.*8.x/d}}' /etc/oracle-cloud-agent/agent.yml

    - name: Checksumming the Oracle Cloud Agent configuration file after modifying it
      command: openssl dgst -sha3-224 /etc/oracle-cloud-agent/agent.yml
      register: oca_new

    - name: Restarting the Oracle Cloud Agent
      systemd:
         name: oracle-cloud-agent
         state: restarted
      when: oca_old.stdout != oca_new.stdout

    - name: Starting the systemd units
      systemd:
         name: "{{ item }}"
         state: started
         enabled: yes
         daemon_reload: yes
      with_items:
       - minecraft-{{ edition }}.service
       - minecraft-{{ edition }}-backup.timer
       - dnf-upgrade.timer
       - oci-disk-utilization.timer
