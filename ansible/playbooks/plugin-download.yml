#yaml-language-server: $schema=https://json.schemastore.org/ansible-playbook.json

- name: Downloading plugins for {{ outer_item.name }}
  get_url:
    url: "{{ item.url }}"
    dest: /opt/minecraft/{{ outer_item.name }}/server/plugins/{{ item.dest }}
    owner: minecraft-{{ outer_item.name }}
    group: minecraft-{{ outer_item.name }}
    mode: 0644
    force: yes
  loop:
    - {
        url: "{% if outer_item.discordsrv %}{{ discordsrv_latest.stdout }}{% endif %}",
        dest: DiscordSRV.jar,
        when: "{{ outer_item.discordsrv }}",
      }
    - {
        url: https://ci.opencollab.dev/job/GeyserMC/job/Geyser/job/master/lastSuccessfulBuild/artifact/bootstrap/spigot/target/Geyser-Spigot.jar,
        dest: Geyser-Spigot.jar,
        when: "{{ outer_item.geyser }}",
      }
    - {
        url: https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/lastSuccessfulBuild/artifact/spigot/target/floodgate-spigot.jar,
        dest: floodgate-spigot.jar,
        when: "{{ outer_item.geyser }}",
      }
    - {
        url: https://ci.opencollab.dev/job/GeyserMC/job/GeyserOptionalPack/job/master/lastSuccessfulBuild/artifact/GeyserOptionalPack.mcpack,
        dest: Geyser-Spigot/packs/,
        when: "{{ outer_item.geyser }}",
      }
    - {
        url: "{% if outer_item.harbor %}{{ harbor_latest.stdout }}{% endif %}",
        dest: Harbor.jar,
        when: "{{ outer_item.harbor }}",
      }
    - {
        url: "{% if outer_item.lpc %}https://api.spiget.org/v2/resources/68965/download{% endif %}",
        dest: LPC.jar,
        when: "{{ outer_item.lpc }}",
      }
    - {
        url: "{% if outer_item.lpc %}https://api.spiget.org/v2/resources/6245/download{% endif %}",
        dest: PlaceholderAPI.jar,
        when: "{{ outer_item.lpc }}",
      }
    - {
        url: "{% if outer_item.lpc and outer_item.geyser %}{{ floodgateplaceholders_latest.stdout }}{% endif %}",
        dest: PlaceholderAPI/expansions/FloodgatePlaceholders.jar,
        when: "{{ outer_item.lpc and outer_item.geyser }}",
      }
    - {
        url: https://cdn.discordapp.com/attachments/804019242512810034/981299679184695336/TreeAssist.jar, # This really needs an API and not a Discord URL
        dest: TreeAssist.jar,
        when: "{{ true }}",
      }
    - {
        url: "{% if outer_item.chunky %}https://ci.codemc.io/view/Author/job/pop4959/job/Chunky/lastSuccessfulBuild/artifact/bukkit/build/libs/{{ chunky_latest.stdout }}{% endif %}",
        dest: "Chunky.jar",
        when: "{{ outer_item.chunky }}",
      }
    - {
        url: "{% if outer_item.farmcontrol %}https://api.spiget.org/v2/resources/86923/download{% endif %}",
        dest: "FarmControl.jar",
        when: "{{ outer_item.farmcontrol }}",
      }
    - {
        url: "{% if use_bluemap %}{{ bluemap_latest.stdout }}{% endif %}",
        dest: BlueMap.jar,
        when: "{{ outer_item.bluemap.use }}",
      }
    - {
        url: "{% if outer_item.bluemap.use %}{{ bluemap_floodgate_latest.stdout }}{% endif %}",
        dest: BlueMapFloodgate.jar,
        when: "{{ outer_item.bluemap.use and outer_item.geyser }}",
      }
    - {
        url: "{{ appleskin_latest.stdout }}",
        dest: AppleSkinSpigot.jar,
        when: "{{ true }}",
      }
    - {
        url: "{{ tabtps_latest.stdout }}",
        dest: TabTPS.jar,
        when: "{{ true }}",
      }
    - {
        url: "https://ci.lucko.me/job/LuckPerms/lastSuccessfulBuild/artifact/bukkit/loader/build/libs/{{ luckperms_latest.stdout }}",
        dest: LuckPerms.jar,
        when: "{{ true }}",
      }
    - {
        url: "{{ minimotd_latest.stdout }}",
        dest: minimotd.jar,
        when: "{{ outer_item.minimotd }}",
      }
    - {
        url: "{% if outer_item.raytraceantixray %}{{ protocollib_latest.stdout }}{% endif %}",
        dest: ProtocolLib.jar,
        when: "{{ outer_item.raytraceantixray }}",
      }
    - {
        url: "{% if outer_item.raytraceantixray %}{{ raytraceantixray_latest.stdout }}{% endif %}",
        dest: RayTraceAntiXray.jar,
        when: "{{ outer_item.raytraceantixray }}",
      }
    - {
        url: "{% if outer_item.viaversion %}{{ viaversion_latest.stdout }}{% endif %}",
        dest: "ViaVersion.jar",
        when: "{{ outer_item.viaversion }}",
      }
    - {
        url: "{% if outer_item.viewdistancetweaks %}https://api.spiget.org/v2/resources/75164/download{% endif %}",
        dest: "ViewDistanceTweaks.jar",
        when: "{{ outer_item.viewdistancetweaks }}",
      }
    - {
        url: "{% if grafana.use %}{{ unifiedmetrics_latest.stdout }}{% endif %}",
        dest: "unifiedmetrics.jar",
        when: "{{ grafana.use }}",
      }
    - {
        url: https://dev.bukkit.org/projects/worldedit/files/latest,
        dest: worldedit-bukkit.jar,
        when: "{{ outer_item.worldedit or outer_item.worldguard }}",
      }
    - {
        url: https://dev.bukkit.org/projects/worldguard/files/latest,
        dest: worldguard-bukkit.jar,
        when: "{{ outer_item.worldguard }}",
      }
  when:
    - outer_item.state.new_server or outer_item.state.update_server
    - outer_item.state.backup.restore_backup == false
    - item.when

- name: Removing plugins for {{ outer_item.name }}
  file:
    path: /opt/minecraft/{{ outer_item.name }}/server/plugins/{{ item.src }}
    state: absent
  loop:
    - { src: BlueMap.jar, when: "{{ outer_item.bluemap.use == false }}" }
    - {
        src: BlueMapFloodgate.jar,
        when: "{{ outer_item.bluemap.use == false }}",
      }
    - { src: Chunky.jar, when: "{{ outer_item.chunky == false }}" }
    - { src: CustomCommandPrefix.jar, when: "{{ outer_item.geyser == false }}" }
    - { src: DiscordSRV.jar, when: "{{ outer_item.discordsrv == false }}" }
    - { src: FarmControl.jar, when: "{{ outer_item.farmcontrol == false }}" }
    - { src: floodgate-spigot.jar, when: "{{ outer_item.geyser == false }}" }
    - { src: Geyser-Spigot.jar, when: "{{ outer_item.geyser == false }}" }
    - { src: Harbor.jar, when: "{{ outer_item.harbor == false }}" }
    - { src: LPC.jar, when: "{{ outer_item.lpc == false }}" }
    - { src: minimotd.jar, when: "{{ outer_item.minimotd == false }}" }
    - {
        src: PlaceholderAPI.jar,
        when: "{{ ( outer_item.lpc and outer_item.geyser ) == false }}",
      }
    - {
        src: ProtocolLib.jar,
        when: "{{ outer_item.raytraceantixray == false }}",
      }
    - {
        src: RayTraceAntiXray.jar,
        when: "{{ outer_item.raytraceantixray == false }}",
      }
    - { src: ViaVersion.jar, when: "{{ outer_item.viaversion == false }}" }
    - {
        src: ViewDistanceTweaks.jar,
        when: "{{ outer_item.viewdistancetweaks == false }}",
      }
    - {
        src: worldedit-bukkit.jar,
        when: "{{ outer_item.worldedit == false or outer_item.worldguard == false }}",
      }
    - {
        src: worldguard-bukkit.jar,
        when: "{{ outer_item.worldguard == false }}",
      }
  when: item.when

- name: Downloading custom plugins for {{ outer_item.name }}
  get_url:
    url: "{{ item.url }}"
    dest: /opt/minecraft/{{ outer_item.name }}/server/plugins/{{ item.name }}.jar
    owner: minecraft-{{ outer_item.name }}
    group: minecraft-{{ outer_item.name }}
    mode: 0644
    force: yes
  loop: "{{ outer_item.custom_plugins }}"
