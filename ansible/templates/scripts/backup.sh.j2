#!/bin/bash

PLAYERS=$(curl -u '{{ grafana.prometheus.username }}:{{ grafana.prometheus.read.api_key }}' --data-urlencode 'query=max_over_time(minecraft_players_count[{{ backup.player_check_range }}])' {{ grafana.prometheus.url }}/api/v1/query | jq -r '.data.result[].value[1]')

if [ "$PLAYERS" -gt 0 ]
then
	DATE=$(date "+%Y-%m-%d-%H-%M-%S")
	BACKUP_RETENTION_DAYS=$(< "$1"/backup_retention_days)

	tail_grep() {
		tail -f -n 0 /opt/minecraft/"$1"/server/logs/latest.log | grep -q "Saved the game"
	}

	tail_grep "$@" &
	sudo systemctl stop minecraft-backup-mount@"$1".service
	tmux send-keys -t minecraft-"$1" say SPACE Saving SPACE the SPACE game SPACE (this SPACE may SPACE take SPACE a SPACE moment!)
	tmux send-keys -t minecraft-"$1" save-off ENTER
	tmux send-keys -t minecraft-"$1" save-all ENTER
	wait

	SCRIPT_PWD=$(pwd)
	cd "$1"/server || exit 1
	borg create --compression zstd{% if use_bluemap %} --pattern=+bluemap/web/data/markers.json --pattern=-bluemap{% endif %} --pattern=-cache --pattern=-libraries --pattern=-versions "$SCRIPT_PWD"/"$1"/backup::"$DATE" .
	tmux send-keys -t minecraft-"$1" save-on ENTER
	tmux send-keys -t minecraft-"$1" say Saved SPACE the SPACE game
	cd "$SCRIPT_PWD" || exit 1

	borg prune --keep-within "$BACKUP_RETENTION_DAYS"d --save-space "$1"/backup
	#borg compact "$1"/backup

	cd "$1" || exit
	tar cf - backup/ | oci os object put --auth instance_principal --bucket-name {{ bucket_name }} --file - --name minecraft-"$1".tar --force

	sudo systemctl start minecraft-backup-mount@"$1".service
else
	echo "No player activity since last backup attempt"
fi
