server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name {{ bluemap_certbot.domain }};
{% if certbot.use %}
    location / {
        return 301 https://$host$request_uri;
    }
{% endif %}
{% if certbot.use == false %}
    # path to bluemap-webroot, bluemap can also be used in a sub-folder .. just adapt the paths accordingly
    root /opt/minecraft/server/bluemap/web;

    location / {
        try_files $uri $uri/ =404 ;
    }

    # map-tiles are stored compressed, and they have a fallback file that should be returned if the tile does not exist
    location /data/ {
        error_page 404 =200 /assets/emptyTile.json;
        gzip_static always;
    }

    # Proxy requests to the live data interface to bluemaps integrated webserver
    location /live/ {
        proxy_pass http://127.0.0.1:8100;
    }
{% endif %}
}

{% if certbot.use %}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ bluemap_certbot.domain }};

{% if bluemap_certbot.ready or item.certbot_ready %}
    ssl_certificate /etc/letsencrypt/live/{{ bluemap_certbot.domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ bluemap_certbot.domain }}/privkey.pem;
{% endif %}
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    # path to bluemap-webroot, bluemap can also be used in a sub-folder .. just adapt the paths accordingly
    root /opt/minecraft/server/bluemap/web;

    location / {
        try_files $uri $uri/ =404 ;
    }

    # map-tiles are stored compressed, and they have a fallback file that should be returned if the tile does not exist
    location /data/ {
        error_page 404 =200 /assets/emptyTile.json;
        gzip_static always;
    }

    # Proxy requests to the live data interface to bluemaps integrated webserver
    location /live/ {
        proxy_pass http://127.0.0.1:8100;
    }
}
{% endif %}
